#!/usr/bin/env zsh

# mkzip
# create a ZIP archive of a directory
# usage: mkzip directory-name-here
mkzip() {
	zip -r "$1".zip "$1"
}

# extract
# extract most know archives with one command
# usage: extract archive-name-here.xxx
extract() {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)   tar xjf $1     ;;
			*.tar.gz)    tar xzf $1     ;;
			*.bz2)       bunzip2 $1     ;;
			*.rar)       unrar e $1     ;;
			*.gz)        gunzip $1      ;;
			*.tar)       tar xf $1      ;;
			*.tbz2)      tar xjf $1     ;;
			*.tgz)       tar xzf $1     ;;
			*.zip)       unzip $1       ;;
			*.Z)         uncompress $1  ;;
			*.7z)        7z x $1        ;;
			*)     echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

# mkcd
# make new directory and jump inside
# usage: mkcd directory-name-here
mkcd() {
	mkdir -p "$1"
	cd "$1"
}

# clean-ds
# recursively delete .DS_Store files
# usage: clean-ds
clean-ds() {
	find . -type f -name '*.DS_Store' -ls -delete
}

# emails
# filter unique email addresses out of a text file
# usage: emails filename.txt
emails() {
	grep -o '[[:alnum:]+\.\_\-]*@[[:alnum:]+\.\_\-]*' "$1" | sort | uniq -i
}

# gps
# shortcut function for "safe" operation of gpsup alias in oh my zsh git plugin
# docs: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git
#
# prevents pushing to common protected branches
# usage: gp
gps() {
	proteted_branches=(main master)
	current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

	if [[ ${proteted_branches[(ie)$current_branch]} -le ${#proteted_branches} ]]; then
		echo ""
		echo "WARNING: $current_branch is probably protected"
		echo "Aborting git push operation..."
		echo ""
	else
	    gpsup
	fi
}
